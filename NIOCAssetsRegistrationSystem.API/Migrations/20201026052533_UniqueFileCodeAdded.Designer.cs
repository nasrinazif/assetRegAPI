// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NIOCAssetsRegistrationSystem.API.Data;

namespace NIOCAssetsRegistrationSystem.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20201026052533_UniqueFileCodeAdded")]
    partial class UniqueFileCodeAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NIOCAssetsRegistrationSystem.API.Models.Beneficiary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Beneficiaries");
                });

            modelBuilder.Entity("NIOCAssetsRegistrationSystem.API.Models.BuildingType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BuildingTypes");
                });

            modelBuilder.Entity("NIOCAssetsRegistrationSystem.API.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProvinceId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("NIOCAssetsRegistrationSystem.API.Models.CompaniesPropertyInquiry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("ArenaArea")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("BeneficiaryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("BuildingArea")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("BuildingTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ExistingBuilding")
                        .HasColumnType("bit");

                    b.Property<bool?>("ExistingMap")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LatestChanges")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Latitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Longitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("MapCoordinatesAccuracyId")
                        .HasColumnType("int");

                    b.Property<int?>("MapFormatId")
                        .HasColumnType("int");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("int");

                    b.Property<bool?>("OwnershipDocument")
                        .HasColumnType("bit");

                    b.Property<int?>("OwnershipDocumentTypeId")
                        .HasColumnType("int");

                    b.Property<string>("PropertyTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<string>("UniqueFileCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("UploadedFile")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Usage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BeneficiaryId");

                    b.HasIndex("BuildingTypeId");

                    b.HasIndex("CityId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("MapCoordinatesAccuracyId");

                    b.HasIndex("MapFormatId");

                    b.HasIndex("OwnerId");

                    b.HasIndex("OwnershipDocumentTypeId");

                    b.HasIndex("ProvinceId");

                    b.HasIndex("UserId");

                    b.ToTable("CompaniesPropertyInquiries");
                });

            modelBuilder.Entity("NIOCAssetsRegistrationSystem.API.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("NIOCAssetsRegistrationSystem.API.Models.Confirmation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ConfirmDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("UserId");

                    b.ToTable("Confirmations");
                });

            modelBuilder.Entity("NIOCAssetsRegistrationSystem.API.Models.FileUpload", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FileUploadDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("UserId");

                    b.ToTable("FileUploads");
                });

            modelBuilder.Entity("NIOCAssetsRegistrationSystem.API.Models.MapCoordinatesAccuracy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MapCoordinatesAccuracies");
                });

            modelBuilder.Entity("NIOCAssetsRegistrationSystem.API.Models.MapFormat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MapFormats");
                });

            modelBuilder.Entity("NIOCAssetsRegistrationSystem.API.Models.Owner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Owners");
                });

            modelBuilder.Entity("NIOCAssetsRegistrationSystem.API.Models.OwnershipDocumentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OwnershipDocumentTypes");
                });

            modelBuilder.Entity("NIOCAssetsRegistrationSystem.API.Models.Province", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Provinces");
                });

            modelBuilder.Entity("NIOCAssetsRegistrationSystem.API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<bool?>("HasPasswordEverChanged")
                        .HasColumnType("bit");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("UserTypeId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("NIOCAssetsRegistrationSystem.API.Models.UserType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserTypes");
                });

            modelBuilder.Entity("NIOCAssetsRegistrationSystem.API.Models.City", b =>
                {
                    b.HasOne("NIOCAssetsRegistrationSystem.API.Models.Province", "Province")
                        .WithMany("Cities")
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NIOCAssetsRegistrationSystem.API.Models.CompaniesPropertyInquiry", b =>
                {
                    b.HasOne("NIOCAssetsRegistrationSystem.API.Models.Beneficiary", "Beneficiary")
                        .WithMany("CompaniesPropertyInquiries")
                        .HasForeignKey("BeneficiaryId");

                    b.HasOne("NIOCAssetsRegistrationSystem.API.Models.BuildingType", "BuildingType")
                        .WithMany("CompaniesPropertyInquiries")
                        .HasForeignKey("BuildingTypeId");

                    b.HasOne("NIOCAssetsRegistrationSystem.API.Models.City", "City")
                        .WithMany("CompaniesPropertyInquiries")
                        .HasForeignKey("CityId");

                    b.HasOne("NIOCAssetsRegistrationSystem.API.Models.Company", "Company")
                        .WithMany("CompaniesPropertyInquiries")
                        .HasForeignKey("CompanyId");

                    b.HasOne("NIOCAssetsRegistrationSystem.API.Models.MapCoordinatesAccuracy", "MapCoordinatesAccuracy")
                        .WithMany("CompaniesPropertyInquiries")
                        .HasForeignKey("MapCoordinatesAccuracyId");

                    b.HasOne("NIOCAssetsRegistrationSystem.API.Models.MapFormat", "MapFormat")
                        .WithMany("CompaniesPropertyInquiries")
                        .HasForeignKey("MapFormatId");

                    b.HasOne("NIOCAssetsRegistrationSystem.API.Models.Owner", "Owner")
                        .WithMany("CompaniesPropertyInquiries")
                        .HasForeignKey("OwnerId");

                    b.HasOne("NIOCAssetsRegistrationSystem.API.Models.OwnershipDocumentType", "OwnershipDocumentType")
                        .WithMany("CompaniesPropertyInquiries")
                        .HasForeignKey("OwnershipDocumentTypeId");

                    b.HasOne("NIOCAssetsRegistrationSystem.API.Models.Province", "Province")
                        .WithMany("CompaniesPropertyInquiries")
                        .HasForeignKey("ProvinceId");

                    b.HasOne("NIOCAssetsRegistrationSystem.API.Models.User", "User")
                        .WithMany("CompaniesPropertyInquiries")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("NIOCAssetsRegistrationSystem.API.Models.Confirmation", b =>
                {
                    b.HasOne("NIOCAssetsRegistrationSystem.API.Models.Company", "Company")
                        .WithMany("Confirmations")
                        .HasForeignKey("CompanyId");

                    b.HasOne("NIOCAssetsRegistrationSystem.API.Models.User", "User")
                        .WithMany("Confirmations")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("NIOCAssetsRegistrationSystem.API.Models.FileUpload", b =>
                {
                    b.HasOne("NIOCAssetsRegistrationSystem.API.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("NIOCAssetsRegistrationSystem.API.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("NIOCAssetsRegistrationSystem.API.Models.User", b =>
                {
                    b.HasOne("NIOCAssetsRegistrationSystem.API.Models.Company", "Company")
                        .WithMany("Users")
                        .HasForeignKey("CompanyId");

                    b.HasOne("NIOCAssetsRegistrationSystem.API.Models.UserType", "UserType")
                        .WithMany("Users")
                        .HasForeignKey("UserTypeId");
                });
#pragma warning restore 612, 618
        }
    }
}
